{"version":3,"sources":["components/Location.jsx","components/Weather.jsx","App.js","index.js"],"names":["Location","props","className","loc","d","Date","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Weather","weath","degree","sky","App","useState","location","setCity","setWeather","api_key","url_base","query","setQuery","useEffect","fetch","then","res","json","data","name","sys","country","Math","round","main","temp","weather","type","placeholder","value","onChange","event","target","onKeyPress","e","key","ReactDOM","render","document","getElementById"],"mappings":"4PAuBeA,MArBf,SAAkBC,GAad,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,YAAYD,EAAME,KACjC,yBAAKD,UAAU,QAfL,WACd,IAAIE,EAAI,IAAIC,KAIRC,EADO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC/DF,EAAEG,UACbC,EAAOJ,EAAEK,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAClE,SAAU,YAAa,UAAW,WAAY,YAI/BN,EAAEO,YACjBC,EAAOR,EAAES,cACb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAMPE,MCPpBC,MATf,SAAiBd,GACb,OACI,yBAAKC,UAAU,eACX,yBAAKA,UAAU,QAAQD,EAAMe,MAAMC,OAAnC,SACA,yBAAKf,UAAU,WAAWD,EAAMe,MAAME,OCiEnCC,MAlEf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNC,EADM,KACIC,EADJ,OAEeF,mBAAS,IAFxB,mBAENJ,EAFM,KAECO,EAFD,OAIiBH,mBAAS,oCAJ1B,mBAINI,EAJM,aAKmBJ,mBAAS,6CAL5B,mBAKNK,EALM,aAMaL,mBAAS,UANtB,mBAMNM,EANM,KAMCC,EAND,KAyCb,OAjCAC,qBAAU,WACRC,MAAM,GAAD,OAAIJ,EAAJ,qBAAyBC,EAAzB,kBAAwCF,IAC1CM,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAACG,GACLX,EAAQ,GAAD,OAAIW,EAAKC,KAAT,aAAkBD,EAAKE,IAAIC,UAClCb,EAAW,CAACN,OAAO,GAAD,OAAIoB,KAAKC,MAAML,EAAKM,KAAKC,KAAO,SACtCtB,IAAI,GAAD,OAAKe,EAAKQ,QAAQ,GAAGF,WAEtCZ,EAAS,MACV,IAuBD,yBAAKzB,UAAU,OACb,8BACE,yBAAKA,UAAU,cACb,2BACEwC,KAAK,OACLxC,UAAU,aACVyC,YAAY,iCACZC,MAAOlB,EACPmB,SAbV,SAAsBC,GACpBnB,EAASmB,EAAMC,OAAOH,QAadI,WA9BU,SAACC,GACN,SAATA,EAAEC,MACJrB,MAAM,GAAD,OAAIJ,EAAJ,qBAAyBC,EAAzB,kBAAwCF,IAC1CM,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UACVF,MAAK,SAACG,GACPX,EAAQ,GAAD,OAAIW,EAAKC,KAAT,aAAkBD,EAAKE,IAAIC,UAClCb,EAAW,CACTN,OAAO,GAAD,OAAKoB,KAAKC,MAAML,EAAKM,KAAKC,KAAO,SACvCtB,IAAI,GAAD,OAAKe,EAAKQ,QAAQ,GAAGF,WAG9BZ,EAAS,SAsBP,yBAAKzB,UAAU,gBACb,kBAAC,EAAD,CAAUC,IAAKkB,IACf,kBAAC,EAAD,CAASL,MAAOA,QCzD1BmC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.1b18763f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Location(props) {\r\n    let dateBuilder = () => {\r\n        let d = new Date()\r\n        let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July'\r\n          , 'August', 'September', 'October', 'November', 'December']\r\n        let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n        let day = days[d.getDay()]\r\n        let date = d.getDate()\r\n        let month = months[d.getMonth()]\r\n        let year = d.getFullYear()\r\n        return `${day} ${date} ${month} ${year}`\r\n      }\r\n\r\n    return (\r\n        <div className=\"location-box\">\r\n            <div className=\"location\">{props.loc}</div>\r\n            <div className=\"date\">{dateBuilder()}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Location","import React from 'react'\r\n\r\nfunction Weather(props) {\r\n    return (\r\n        <div className=\"weather-box\">\r\n            <div className=\"temp\">{props.weath.degree}Â°c</div>\r\n            <div className=\"weather\">{props.weath.sky}</div>\r\n          </div>\r\n    )\r\n}\r\n\r\nexport default Weather","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Location from './components/Location'\nimport Weather from './components/Weather'\n\nfunction App() {\n  const [location, setCity] = useState('')\n  const [weath, setWeather] = useState({})\n\n  const [api_key, setApi_key] = useState('efd8b5271eba009222f1c2aa184b8ad1')\n  const [url_base, setUrl_base] = useState('https://api.openweathermap.org/data/2.5/')\n  const [query, setQuery] = useState('Odesa')\n\n  useEffect(() => {\n    fetch(`${url_base}weather?q=${query}&appid=${api_key}`)\n      .then(res => {\n        return res.json();\n      })\n      .then((data) => {\n        setCity(`${data.name}, ${data.sys.country}`)\n        setWeather({degree:`${Math.round(data.main.temp - 273.15) }`,\n                    sky: `${data.weather[0].main}`})\n      })  \n      setQuery('')\n  }, [])\n\n  const loadWeather = (e) => {\n    if (e.key == \"Enter\") {\n      fetch(`${url_base}weather?q=${query}&appid=${api_key}`)\n        .then(res => {\n          return res.json()\n        }).then((data) => {\n          setCity(`${data.name}, ${data.sys.country}`)\n          setWeather({\n            degree: `${Math.round(data.main.temp - 273.15)}`,\n            sky: `${data.weather[0].main}`\n          })\n        })\n      setQuery('')\n    }\n  }\n\n  function handleChange(event) {\n    setQuery(event.target.value)\n  }\n\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Please enter a city in english\"\n            value={query}\n            onChange={handleChange}\n            onKeyPress={loadWeather}\n          />\n        </div>\n\n        <div className=\"weather-wrap\" >\n          <Location loc={location} />\n          <Weather weath={weath} />\n\n        </div>\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}